通过移动电话中的相机设备实现条码辨识器

摘要

这篇论文解释了有关应用于移动电话的条形／二维码图像识别的新型算法与实现。

在本文所讲到的移动电话系统中，包括了内置相机、移动应用处理器、数字信号处理器（下文都将使用 DSP 代替）、显示器这几个基本组成要素，此外，后面需要被用来辨识的原图像会由内置相机来捕获。


！即将在本文中介绍的算法是＃基于＃通过内置 DSP，使用四角检测二维条码或是使用螺旋扫描一维条码所找到所需要的代码区。

！这个算法在实际情景中足够健壮，＃现代的 DSP 有＃足够的性能来完成代码的实时识别。


我们的图像处理在性能方面，对于条形码是 66.7 帧每秒，对于二维码图像处理是 14.1 帧每秒，并且在实际使用当中这样的性能完全能够满足我们的需求。

！已发布的移动电话在＃图像处理方面的性能＃是 5 - 10 帧每秒，这包括了操作系统与子系统的性能开销。


第一部分：介绍

现在的移动电话已经实现了各种新型的应用，就像可以用内置相机拍照片、拍电影，当然这种进步也得益于相机设备技术的发展。

举例来讲，在 2003 年的时候，全日本的移动电话当中已经有 30％ 内置了相机，并且那之中有一部分是超过百万像素级别的图像传感器相机。

同样，内置相机可以用作诸如符号识别的新型输入接口。

在日本，大多数内置了相机的移动电话支持符号识别，就如能识别一维的条形码以及二维码，这些代码符号可便于通过读取 URL 地址或是类似的地址字符来使用电话提供的网络服务。


之前的工作演示了用到特殊标签的应用，其标签是由 PC 机的内置摄像头捕获，并通过 PC 机上的软件来识别。

在这次的应用中，我们要用到特殊的二维码以及标准的 PC 机。

（特别扭，前后不通顺、连贯）！在一份关于识别一维条码的研究中，讲述了如何运用霍夫变换在 PC 机上实现一维条码读取器。


另一方面，移动电话的系统架构已经被半导体供应商改变。

时下或最新一代的电话设备只有一个被称为基带处理器的主处理单元，但是其计算能力对于组合了音频和视频数据的新应用来说是不够的。

应用程序革命为此在更新一代移动电话中加入了一个名为应用处理器的额外处理器。

！在这个背景下，时下的高端移动电话中会包含这两个处理器：其一是基带处理器，它适用于语音数字信号处理，协议控制，电源管理，和一些基本的功能；另一个是应用处理器，负责处理额外的应用，如电影编解码器，照片编解码器和调整大小，以及其他额外的应用。

尤其是应用处理器，目前它的性能好坏决定了移动电话的特性。

市面上大部分应用处理器是由德州仪器生产的 OMAP，以及瑞萨生产的 SH-Mobile


我们为条形码和二维条码引入了一个新的图像重组算法，这是在我们的应用平台中实现的，内容详见本文第 3 节。

该算法是为当前这种内置有相机、应用处理器、DSP的移动电话架构所开发的。

该算法使用螺旋扫描方法来检测一维条形码的关键黑条，使用四角检测找到二维码的代码区。

！在这份研究中，图像处理部分由 DSP 来实现，而解码、用户软件部分则在应用处理器的主机 CPU 中实现。


硬件系统和处理流程会在第 2 节中讲到。

关于一维/二维条码符号的图像识别算法则会在第 3 节中被讨论，此外其实现与性能评估会在第 4 节中给出解答，而第 5 节则给出了实际测试结果。


第二部分：系统

本节介绍在移动电话中实现条形码读取系统的硬件系统架构及其处理流程。


相机设备和应用处理器是该系统的必要硬件组件。

其中，应用处理器需要实现相机接口、LCD 控制器、图像处理用的 DSP，以及实时计算用的应用程序主 CPU（如图 1 所示）。

应用处理器用于显示菜单中的显示和预览以及实时码识别与译码的计算。

这样的系统使用户可以控制相机的位置，并决定捕捉时机。

处理流程如下：

1. 执行条码辨识应用程序 －－ 应用处理器通过用户在菜单选择，进入条码辨识模式。

2. 从内置相机设备捕获 －－ 源图像通过相机接口被内置相机设备捕获，并将这些图像发送到两个单元，DSP，LCD 控制器，分别用于进行图像处理和播放用户预览。

3. 在 DSP 中处理图像 －－ 捕获到源图像后，条码信息是在 DSP 中进行检测与处理，并且在这个阶段，处理后的图像将作为标准大小和二值化图像的编码区输出。

4. 解码 －－ 前一阶段中处理的条码数据是在主机 CPU 中被解码的，并且解码后的条码信息会导出到应用程序。

5. 显示结果 －－ 主应用程序显示解码后的结果。


！本文将主要介绍 DSP 中的条码识别算法，并且下文中对于实现与性能方面的讨论，我们的评估都是基于该系统，因为我们相信，移动电话系统的观点在实际应用中非常重要。


第三部分：算法

一维条形码与二维码的图像处理过程在这节中提出，并且这两种码在日本移动市场中是被公认的事实标准。

本文不讨论解码过程的代码，因为解码过程符合 ISO / IEC 标准规范，并已在我们系统的主机 CPU 中实现。

这些算法的输入和输出定义如下：

1. 输入数据 －－ 移动电话内置相机捕获的图像，它必须由 YUV 色彩分量组成。这个图像可能会带有很多噪音，模糊，光线不均匀，以及附近的字符。

2. 输出数据 －－ 一维条形码在条码部分的一维样本扫描结果（8位灰度线段）以及二维码二维归一化双层数据（1个cell相当于1比特）


##3.1 一维条形码##

一维条形码有四种宽度类型的黑色或白色条纹，且这些条纹的排列方向总是相互平行的。

本算法中，这些平行的黑条纹用来识别条形码的区域，我们假定图片的中心包含代码区域的一部分，因为这样的话能大大减小搜索条码所在区域的计算成本。


该算法包括以下阶段（如图 2 所示）：

1. 预处理 －－ 通过内置相机获得的图像会在这个阶段中经过预处理，用来定义黑与白强度水平边界的阈值，并且所获得的图像的颜色空间是由 YUV 分量组成，因此，我们可以选择 Y 分量来进行图像处理。

2. 黑条纹检测 －－ 预处理的图像被使用螺旋搜索方法进行扫描，该方法从图像中心扫描螺旋，直到找到一竖黑色条纹。

3. 采样 －－ 垂直于黑条纹的线是用上一阶段检测到的黑条来计算的，且整个条纹图案是根据计算所得的方向采样出来。


解码器程序的结果不是一个双级图像，而是一个 8 位灰度原始数据，因为黑白条纹各有四种宽度类型，需要解码结果来决定线段的每一部分的更好的阈值。

值得一提的是，一般情况下在条形码底部都写会有一些字符，但在我们的算法中，通过用螺旋扫描方法获得采样线中黑色条纹的行高，就可以排除这部分，并且这些行高决定了条码区域的顶部和底部边界。

！同样，从我们的实验结果来看，看条形码时候的距离与失焦问题可以忽略。
Also perspective and viewing distraction of ENA code can be ignored from our experimental results.


##3.2 二维码##

在本节中，主要要讲二维码图像的重组织与处理过程。

由 DENSO3 开发的 QR 码，被普遍认为是一种二维的条码。

这种二维码的特点是容量大，打印输出小，扫描速度快。


图 3 所示表明了二维码的结构，此码由以下几部分组成：查找图案、时序图案、格式信息、对齐图案和数据单元。

它的定义可详见于本文底部引述：[2]。


引述中有介绍重组过程的实例，它基于上述的查找图案、对齐图案，其中此对齐图案用于调整二维码变形。

然而，要使用这种对齐标记的变形误差校正，代码读取过程中需要找到对齐标记。

在我们的系统中，图像重组和解码部分被分离，以便实时识别移动电话平台上的二维码，并能应用到其他二维的码符号。

基于上述原因，我们制定了新的重组方案。


该算法的概述如下所示（见图4）：

1. 预处理 －－ 灰度直方图计算的方式被采用。

2. 角标志检测 －－ 使用取景器模式检测三个标记的角。

3. 断定第四个角 －－ 用特定算法检测出第四个角

4. 逆透视变换 －－ 采用逆变换是基于获得的角点几何位置规范代码的大小

5. 二维码扫描 －－ 采样二维码内容并将标准化的双级代码数据输出到主机 CPU


上述方案可以适用于其他类型的代码，因为该方案只使用了 QR 码的一个关键模式：用取景器模式来检测正方形区域。

算法的细节会在下一小节中讲述。


##3.2.1 预处理##

从相机接口获得的输入图像具有 YUV 颜色空间的分量（亮度和色度），我们使用其中有8位（256级）灰度数据的 Y 分量，为该图像进行处理。

进行预处理，要用到以下三个图像处理的步骤：1. 直方图计算以确定黑白边界阈值；2. 调整原图像的大小，以降低下一阶段的计算成本 —— 识别 QR 码所在区域；3. 区域扩张滤波。


在直方图计算这一步骤中，对 60 × 60 正方形区域的图像中心附近的九个部分作为采样点，来定义黑白亮度转换双水平图像之间的阈值。

为每个选定区域的像素密度进行排序，并将排序密度（中值亮度）的中值作为该区域的阈值。

这之后，根据实验结果，阈值被定义为所有选定的区域的阈值中的最小值。

定义好阈值之后，调整过的图像要再次延 x、y 轴方向缩小一半，用作原始亮度分量的图像，以减少计算量。

！最后，过滤，以填充孔（区域扩张），用于识别 QR 码区
Finally, the filtering, which works for filling the holes (area dilatation), is used to recognize the QR-code area

以原始的四个像素作为最小密度，并转换为一个像素。

在我们的实现中，过滤这一步骤也与原图像大小调整的过程相结合。


##3.2.2 角标志检测##



##3.2.3 断定第四个角##


##3.2.4 逆透视变换##


##3.2.5 二维码扫描##



































